{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["marked","setOptions","breaks","renderer","Renderer","link","href","title","text","Editor","class","id","onChange","this","props","value","markdown","React","Component","Previewer","dangerouslySetInnerHTML","__html","App","state","handleChange","bind","e","setState","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RA0CAA,IAAOC,WAAW,CAChBC,QAAQ,IAGV,IAAMC,EAAW,IAAIH,IAAOI,SAC5BD,EAASE,KAAO,SAASC,EAAMC,EAAOC,GACpC,MAAO,mCAA4BF,EAA5B,aAAqCE,GAAS,Q,IAGjDC,E,uKAGF,OACE,sBAAKC,MAAM,+BAA+BC,GAAG,OAA7C,UACE,sBAAKD,MAAM,cAAX,UAAyB,mBAAGA,MAAM,oBAAlC,IAAyD,+CAC/D,qBAAKA,MAAM,YAAX,SACE,qBAAKA,MAAM,gBAAX,SACF,0BAAUC,GAAG,SAASC,SAAUC,KAAKC,MAAMF,SAAUG,MAAOF,KAAKC,MAAME,SAAUN,MAAM,4B,GARpEO,IAAMC,WAgBrBC,E,uKAGF,OACE,sBAAKT,MAAM,+BAAX,UACE,sBAAKA,MAAM,cAAX,UAAyB,mBAAGA,MAAM,gBAAlC,IAAqD,kDAC3D,qBAAKA,MAAM,YAAX,SACE,qBAAKC,GAAG,UAAUD,MAAM,YAAYU,wBAAyB,CACzDC,OAAQrB,IAAOa,KAAKC,MAAME,SAAU,CAAEb,SAAUA,gB,GARhCc,IAAMC,WA2CfI,E,kDA1Bb,WAAYR,GAAO,IAAD,8BAChB,cAAMA,IACDS,MAAQ,CACXP,SAnFY,q5BAqFhB,EAAKQ,aAAe,EAAKA,aAAaC,KAAlB,gBALF,E,yDAQLC,GACXb,KAAKc,SAAS,CACZX,SAAUU,EAAEE,OAAOb,U,+BAKrB,OACE,gCACE,oBAAIL,MAAM,cAAV,gCACA,cAAC,EAAD,CAAQE,SAAUC,KAAKW,aAC/BR,SAAUH,KAAKU,MAAMP,WACb,cAAC,EAAD,CAAWA,SAAUH,KAAKU,MAAMP,kB,GArBtBC,IAAMC,WCvETW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e8e12a44.chunk.js","sourcesContent":["import React from \"react\";\r\nimport marked from 'marked';\r\nimport './App.css';\r\n\r\nconst markdownText = `# Hi, welcome to the React Markdown Previewer App\r\n\r\n## You can write pretty much whatever you want in markdown and it will be translated to HTML!!\r\n\r\n### Let's see some examples...\r\n\r\nHere's a [link](https://github.com/Alfred021)\r\n\r\nYou can also display some html code \\`<p></p>\\`\r\n\r\nThere's some javascript code as well\r\n\\`\\`\\`\r\nfunction checkMarkdown(markdown) {\r\n    if (markdown){\r\n  return 'Text written with markdown'\r\n    }  else {\r\n  return 'You should consider writing some text using markdown'\r\n    }\r\n}\r\n\\`\\`\\`\r\n\r\nBut there's more...\r\n\r\nLISTS!!!\r\n\r\n* Item 1\r\n* Item 2 \r\n* Texts can also be bolded **if you want**\r\n\r\nYour favorite quotes!!!\r\n\r\n> Heroes may not be braver than anyone else. They're just braver 5 minutes longer. - Ronald Reagan\r\n\r\nWe cannot finish this showcase without images.\r\n\r\n![React Logo](https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/200px-React-icon.svg.png)\r\n`;\r\n\r\nmarked.setOptions({\r\n  breaks: true\r\n});\r\n\r\nconst renderer = new marked.Renderer();\r\nrenderer.link = function(href, title, text) {\r\n  return `<a target=\"_blank\" href=\"${href}\">${text}` + '</a>';\r\n};\r\n\r\nclass Editor extends React.Component {\r\n  \r\n  render() {\r\n    return(\r\n      <div class=\"card text-dark bg-light mb-3\" id=\"edit\">\r\n        <div class=\"card-header\"><i class=\"fab fa-markdown\"></i> <strong>Editor</strong></div>\r\n  <div class=\"card-body\">\r\n    <div class=\"form-floating\">\r\n  <textarea id=\"editor\" onChange={this.props.onChange} value={this.props.markdown} class=\"form-control\"></textarea>\r\n    </div>\r\n  </div>\r\n</div>\r\n    )\r\n  }\r\n}\r\n\r\nclass Previewer extends React.Component {\r\n  \r\n  render() {\r\n    return(\r\n      <div class=\"card text-dark bg-light mb-3\">\r\n        <div class=\"card-header\"><i class=\"fas fa-code\"></i> <strong>Previewer</strong></div>\r\n  <div class=\"card-body\">\r\n    <div id=\"preview\" class=\"card-text\" dangerouslySetInnerHTML={{\r\n        __html: marked(this.props.markdown, { renderer: renderer })\r\n      }}></div>\r\n  </div>\r\n</div>\r\n    )\r\n  }\r\n}\r\n\r\nclass App extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      markdown: markdownText,\r\n    }\r\n  this.handleChange = this.handleChange.bind(this)\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({\r\n      markdown: e.target.value\r\n    });\r\n  }\r\n  \r\n  render() {\r\n    return(\r\n      <div>\r\n        <h1 class=\"text-center\">Markdown Previewer</h1>\r\n        <Editor onChange={this.handleChange} \r\nmarkdown={this.state.markdown}/>\r\n        <Previewer markdown={this.state.markdown}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}